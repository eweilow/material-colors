{"version":3,"sources":["script.js"],"names":["runColors","wrapper","all","querySelectorAll","HOOK_COLOR_ATTRIBUTE","HOOK_COLOR_BG_ATTRIBUTE","i","length","parent","isColor","isBg","hasAttribute","COLOR_DEFINE_ATTRIBUTE","BG_DEFINE_ATTRIBUTE","parentElement","initial","attribute","DEFAULT_COLOR","getAttribute","setAttribute","COLOR_ACTUAL_ATTRIBUTE","BG_ACTUAL_ATTRIBUTE","LIGHT_ATTRIBUTE","DEFAULT_BG","window","colors","light","runBg","allbg","HOOK_BG_ATTRIBUTE","benchmark","start","performance","now","count","document","alert","applyForRandom","attributeName","keys","Object","Math","floor","random","generateColors","element","parentNode","end","console","log","toFixed"],"mappings":"AAaA,QAASA,WAAUC,GAEjB,IAAI,GADAC,GAAMD,EAAQE,iBAAiB,IAAIC,qBAAqB,MAAMC,wBAAwB,KAClFC,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAAK,CAClC,GAAIE,GAASN,EAAII,GAEbG,GAAU,EACVC,GAAO,CACX,GACED,GAAUD,EAAOG,aAAaC,wBAC9BF,EAAOF,EAAOG,aAAaE,4BAErBJ,IAAWC,IAAUF,EAASA,EAAOM,eAE7C,IAAIC,GAAUb,EAAII,EAClB,IAAGG,EAAS,CACV,GAAIO,GAAYC,aACbT,KACDQ,EAAYR,EAAOU,aAAaN,yBAE/BG,EAAQJ,aAAaP,sBACtBW,EAAQI,aAAaC,uBAAwBJ,GAE7CD,EAAQI,aAAaC,wBAAwB,GAE5CL,EAAQJ,aAAaN,yBACtBU,EAAQI,aAAaE,oBAAqBL,GAE1CD,EAAQI,aAAaE,qBAAqB,GAE5CN,EAAQI,aAAaG,iBAAiB,OACjC,CACL,GAAIN,GAAYO,UACbf,KACDQ,EAAYR,EAAOU,aAAaL,sBAElCE,EAAQI,aAAaG,gBAAiBE,OAAOC,OAAOA,OAAOT,GAAWU,SAK5E,QAASC,OAAM1B,GAEb,IAAI,GADA2B,GAAQ3B,EAAQE,iBAAiB,IAAI0B,kBAAkB,KACnDvB,EAAI,EAAGA,EAAIsB,EAAMrB,OAAQD,IAAK,CAEpC,IADA,GAAIE,GAASoB,EAAMtB,IACZE,EAAOG,aAAaE,uBAAyBL,EAASA,EAAOM,iBAEpE,GAAIC,GAAUa,EAAMtB,GAChBU,EAAYO,UACbf,KACDQ,EAAYR,EAAOU,aAAaL,sBAElCE,EAAQI,aAAaE,oBAAqBL,IAK9C,QAASc,aAGP,IAAI,GAFAC,GAAQC,YAAYC,MACpBC,EAAQ,IACJ5B,EAAI,EAAO4B,EAAJ5B,EAAWA,IACxBN,UAAUmC,UACVR,MAAMQ,SAERC,QAAOJ,YAAYC,MAAQF,GAASG,EAAQ,6BAA+BF,YAAYC,MAAQF,IAGjG,QAASM,gBAAeC,GAGtB,IAAI,GAFAC,GAAOC,OAAOD,KAAKf,OAAOC,OAAOA,QACjCG,EAAQO,SAAShC,iBAAiB,IAAImC,EAAc,cAChDhC,EAAI,EAAGA,EAAIsB,EAAMrB,OAAQD,IAAK,CACpC,GAAIE,GAASoB,EAAMtB,EACnBE,GAAOW,aAAamB,EAAeC,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKhC,WApF5E,GAAIe,iBAAkB,UAClBlB,qBAAuB,eACvBC,wBAA0B,kBAC1BwB,kBAAoB,YACpBjB,uBAAyB,UACzBC,oBAAsB,OAEtBO,uBAAyB,iBACzBC,oBAAsB,cAEtBJ,cAAgB,YAChBM,WAAa,WA4EjBc,gBAAexB,qBACfwB,eAAezB,wBAEfY,OAAOoB,eAAiB,SAASC,GAC/B,GAAId,GAAQC,YAAYC,KACpBY,GAEOA,EAAQC,aACjBD,EAAUA,EAAQC,YAFlBD,EAAUV,SAIZnC,UAAU6C,GACVlB,MAAMkB,EACN,IAAIE,GAAMf,YAAYC,KACtBe,SAAQC,IAAI,0BAA4BF,EAAMhB,GAAOmB,QAAQ,GAAK,OAEpE1B,OAAOoB,eAAeT","file":"script.min.js","sourcesContent":["var LIGHT_ATTRIBUTE = \"m-light\"; \r\nvar HOOK_COLOR_ATTRIBUTE = \"m-hook-color\";\r\nvar HOOK_COLOR_BG_ATTRIBUTE = \"m-hook-color-bg\";\r\nvar HOOK_BG_ATTRIBUTE = \"m-hook-bg\";\r\nvar COLOR_DEFINE_ATTRIBUTE = \"m-color\";\r\nvar BG_DEFINE_ATTRIBUTE = \"m-bg\";\r\n\r\nvar COLOR_ACTUAL_ATTRIBUTE = \"m-actual-color\";\r\nvar BG_ACTUAL_ATTRIBUTE = \"m-actual-bg\";\r\n\r\nvar DEFAULT_COLOR = \"black-500\";\r\nvar DEFAULT_BG = \"white-500\";\r\n\r\nfunction runColors(wrapper) {\r\n  var all = wrapper.querySelectorAll(\"[\"+HOOK_COLOR_ATTRIBUTE+\"],[\"+HOOK_COLOR_BG_ATTRIBUTE+\"]\");\r\n  for(var i = 0; i < all.length; i++) {\r\n    var parent = all[i];\r\n    \r\n    var isColor = false;\r\n    var isBg = false;\r\n    do {\r\n      isColor = parent.hasAttribute(COLOR_DEFINE_ATTRIBUTE)\r\n      isBg = parent.hasAttribute(BG_DEFINE_ATTRIBUTE);\r\n    }\r\n    while(!(isColor || isBg) && (parent = parent.parentElement));\r\n    \r\n    var initial = all[i];\r\n    if(isColor) {\r\n      var attribute = DEFAULT_COLOR;\r\n      if(parent) {\r\n        attribute = parent.getAttribute(COLOR_DEFINE_ATTRIBUTE);\r\n      }\r\n      if(initial.hasAttribute(HOOK_COLOR_ATTRIBUTE)) {\r\n        initial.setAttribute(COLOR_ACTUAL_ATTRIBUTE, attribute);\r\n      } else {\r\n        initial.setAttribute(COLOR_ACTUAL_ATTRIBUTE, false);\r\n      }\r\n      if(initial.hasAttribute(HOOK_COLOR_BG_ATTRIBUTE)) {\r\n        initial.setAttribute(BG_ACTUAL_ATTRIBUTE, attribute);\r\n      } else {\r\n        initial.setAttribute(BG_ACTUAL_ATTRIBUTE, false);\r\n      }\r\n      initial.setAttribute(LIGHT_ATTRIBUTE, false);\r\n    } else {\r\n      var attribute = DEFAULT_BG;\r\n      if(parent) {\r\n        attribute = parent.getAttribute(BG_DEFINE_ATTRIBUTE);\r\n      }\r\n      initial.setAttribute(LIGHT_ATTRIBUTE, window.colors.colors[attribute].light);\r\n    }\r\n  }\r\n}\r\n\r\nfunction runBg(wrapper) {\r\n  var allbg = wrapper.querySelectorAll(\"[\"+HOOK_BG_ATTRIBUTE+\"]\");\r\n  for(var i = 0; i < allbg.length; i++) {\r\n    var parent = allbg[i];\r\n    while(!parent.hasAttribute(BG_DEFINE_ATTRIBUTE) && (parent = parent.parentElement));\r\n    \r\n    var initial = allbg[i];\r\n    var attribute = DEFAULT_BG;\r\n    if(parent) {\r\n      attribute = parent.getAttribute(BG_DEFINE_ATTRIBUTE);\r\n    }\r\n    initial.setAttribute(BG_ACTUAL_ATTRIBUTE, attribute);\r\n  }\r\n}\r\n\r\n\r\nfunction benchmark() {\r\n  var start = performance.now();\r\n  var count = 10000;\r\n  for(var i = 0; i < count; i++) {\r\n    runColors(document);\r\n    runBg(document);\r\n  }\r\n  alert((performance.now() - start) / count + \"ms per operation, total: \" + (performance.now() - start));\r\n}\r\n\r\nfunction applyForRandom(attributeName) {\r\n  var keys = Object.keys(window.colors.colors);\r\n  var allbg = document.querySelectorAll(\"[\"+attributeName+\"='random']\");\r\n  for(var i = 0; i < allbg.length; i++) {\r\n    var parent = allbg[i];\r\n    parent.setAttribute(attributeName, keys[Math.floor(Math.random() * keys.length)]);\r\n  }\r\n}\r\napplyForRandom(BG_DEFINE_ATTRIBUTE);\r\napplyForRandom(COLOR_DEFINE_ATTRIBUTE);\r\n\r\nwindow.generateColors = function(element) {\r\n  var start = performance.now();\r\n  if(!element) {\r\n    element = document;\r\n  } else if (element.parentNode) {\r\n    element = element.parentNode;\r\n  }\r\n  runColors(element);\r\n  runBg(element);\r\n  var end = performance.now();\r\n  console.log(\"Applying colors took: \" + (end - start).toFixed(2) + \"ms\");\r\n};\r\nwindow.generateColors(document);\r\n\r\n/*\r\nvar types = Object.keys(window.colors.typography.light);\r\n\r\nfor(var key in window.colors.cache) {\r\n  var el = document.createElement(\"div\");\r\n  el.setAttribute(BG_DEFINE_ATTRIBUTE, key);\r\n  \r\n  var p2 = document.createElement(\"p\");\r\n  p2.setAttribute(BG_DEFINE_ATTRIBUTE, \"white-500\");\r\n  p2.setAttribute(COLOR_DEFINE_ATTRIBUTE, (key.split(\"-\")[0])+\"-500\");\r\n  p2.setAttribute(\"m-hook-bg\", \"primary\");\r\n  p2.setAttribute(\"m-hook-color\", \"primary\");\r\n  p2.innerText = key;\r\n  el.appendChild(p2);\r\n  \r\n  for(var i = 0; i < types.length; i++) {\r\n    var p = document.createElement(\"p\");\r\n    p.setAttribute(\"m-hook-color\", types[i]);\r\n    p.setAttribute(\"m-hook-bg\", \"primary\");\r\n    p.innerText = types[i];\r\n    \r\n    var p3 = document.createElement(\"span\");\r\n    p3.setAttribute(\"m-hook-color-bg\", types[i]);\r\n    p.appendChild(p3);\r\n    \r\n    el.appendChild(p);\r\n  }\r\n  \r\n  var p2 = document.createElement(\"p\");\r\n  p2.setAttribute(BG_DEFINE_ATTRIBUTE, \"grey-100\");\r\n  p2.setAttribute(COLOR_DEFINE_ATTRIBUTE, key);\r\n  p2.setAttribute(\"m-hook-color\", \"primary\");\r\n  p2.setAttribute(\"m-hook-bg\", \"primary\");\r\n  p2.innerText = key;\r\n  \r\n  var p3 = document.createElement(\"span\");\r\n  p3.setAttribute(\"m-hook-color-bg\", \"primary\");\r\n  p2.appendChild(p3);\r\n  \r\n  el.appendChild(p2);\r\n  document.body.appendChild(el);\r\n}\r\n\r\nvar start2 = performance.now();\r\ngenerateStyle();\r\nvar end2 = performance.now();\r\n\r\nvar item = document.getElementById(\"time\");\r\nvar start = performance.now();\r\nrunColors(document);\r\nrunBg(document);\r\nvar end = performance.now();\r\nitem.innerText = \"Generating colors took \" + (end - start).toFixed(2) + \"ms, style took \" + (end2 - start2).toFixed(2) + \"ms\";\r\n*/\r\n/*\r\nfunction frame(){\r\n  var keys = Object.keys(window.colors.cache);\r\n  \r\n  var allbg = document.querySelectorAll(\"[m-bg]:not([m-color])\");\r\n  for(var i = 0; i < allbg.length; i++) {\r\n    var initial = allbg[i];\r\n    \r\n    initial.setAttribute(BG_DEFINE_ATTRIBUTE, keys[Math.floor(Math.random() * keys.length)]);\r\n  }\r\n  \r\n  var allbg2 = document.querySelectorAll(\"[m-color]\");\r\n  for(var i = 0; i < allbg2.length; i++) {\r\n    var initial2 = allbg2[i];\r\n    \r\n    initial2.setAttribute(COLOR_DEFINE_ATTRIBUTE, keys[Math.floor(Math.random() * keys.length)]);\r\n  }\r\n};\r\n\r\n\r\nvar observer = new MutationObserver(function(mutations) {\r\n  var start = performance.now();\r\n  for(var i = 0; i < mutations.length; i++) {\r\n    if(mutations[i].type === \"attributes\") {\r\n      if(mutations[i].attributeName === COLOR_DEFINE_ATTRIBUTE) {\r\n        runColors(mutations[i].target);\r\n      } else if(mutations[i].attributeName === BG_DEFINE_ATTRIBUTE) {\r\n        runBg(mutations[i].target);\r\n      }\r\n    }\r\n    \r\n  }\r\n  var end = performance.now();\r\n  item.innerText = \"Generating colors took \" + (end - start) + \"ms\";\r\n}); \r\n// configuration of the observer:\r\nvar config = { attributes: true, childList: true, subtree: true, attributeFilter: [BG_DEFINE_ATTRIBUTE, COLOR_DEFINE_ATTRIBUTE] };\r\nobserver.observe(document.body, config);\r\n\r\n\r\nframe();\r\n\r\nsetInterval(frame, 1000);\r\n*/"],"sourceRoot":"/source/"}